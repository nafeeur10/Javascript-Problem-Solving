Question:

Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.

Link: https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers

Solution:

function sumFibs(num) {
  if(num == 1)
  return num;

  else
  {
    let sum = 0;
    let fib0 = 1;
    let fib1 = 1;
    let total = 0;

    for(let i = 0;  ; i++)
    {
      
      sum = fib0 +fib1;
      if(fib0 > num)
      break;

      if(fib0%2==1)
      total += fib0;

      fib0 = fib1;
      fib1 = sum;
    }
    return total;
  }
}

sumFibs(4);
